(()=>{"use strict";const t=class{constructor(t){this.length=t,this.hitCount=0,this.sunk=!1}hit(){this.hitCount++,this.isSunk()}isSunk(){return this.length==this.hitCount&&(this.sunk=!0),this.sunk}},s=class{constructor(){this.board=this.buildGrid(),this.attacks=[],this.misses=[]}buildGrid(){let t=[];for(let s=0;s<10;s++){t.push([]);for(let e=0;e<10;e++)t[s].push(null)}return t}placeShip(s,e,o){const i=new t(o);let a=!1;const l=s[0],r=s[1];if(e)if(l+i.length<=this.board.length){for(let t=0;t<i.length;t++)this.board[l+t][r]&&(a=!0,console.log("SHIP DETECTED!"));if(!a)for(let t=0;t<i.length;t++)this.getAdjacent(l+t,r),this.board[l+t][r]=i}else console.log("ship out of bounds");else if(r+i.length<=this.board.length){for(let t=0;t<i.length;t++)this.board[l][r+t]&&(a=!0,console.log("SHIP DETECTED!"));if(!a)for(let t=0;t<i.length;t++)this.getAdjacent(l,r+t),this.board[l][r+t]=i}else console.log("ship out of bounds")}validPos(t,s,e,o){return t<0||s<0||t>e-1||s>o-1?0:1}getAdjacent(s,e){let o=this.board.length,i=this.board[0].length;this.validPos(s-1,e-1,o,i)&&(this.board[s-1][e-1]=1),!this.validPos(s-1,e,o,i)||this.board[s-1][e]instanceof t||(this.board[s-1][e]=1),this.validPos(s-1,e+1,o,i)&&(this.board[s-1][e+1]=1),!this.validPos(s,e-1,o,i)||this.board[s][e-1]instanceof t||(this.board[s][e-1]=1),!this.validPos(s,e+1,o,i)||this.board[s][e+1]instanceof t||(this.board[s][e+1]=1),this.validPos(s+1,e-1,o,i)&&(this.board[s+1][e-1]=1),!this.validPos(s+1,e,o,i)||this.board[s+1][e]instanceof t||(this.board[s+1][e]=1),this.validPos(s+1,e+1,o,i)&&(this.board[s+1][e+1]=1)}recieveAttack(s){for(let t=0;t<this.attacks.length;t++)if(this.attacks[t][0]==s[0]&&this.attacks[t][1]==s[1])return"alreadyHit";return this.attacks.push(s),this.board[s[0]][s[1]]instanceof t?(this.board[s[0]][s[1]].hit(),this.allSunk()&&console.log("All ships sunk!"),!0):(this.misses.push(s),!1)}allSunk(){for(let s=0;s<this.board.length;s++)for(let e=0;e<this.board.length;e++)if(this.board[s][e]instanceof t&&!this.board[s][e].isSunk())return!1;return!0}},e=class{constructor(t){this.enemyBoard=t,this.attackedCoord}attack(t){return this.enemyBoard.recieveAttack(t)}randomAttack(){const t=[Math.floor(10*Math.random()),Math.floor(10*Math.random())];return this.attackedCoord=t,this.enemyBoard.recieveAttack(t)}},o=new s;o.placeShip([1,1],!1,5),o.placeShip([3,4],!1,4),o.placeShip([6,5],!0,3),o.placeShip([5,1],!1,3),o.placeShip([8,1],!0,2);const i=new s;i.placeShip([0,0],!0,5),i.placeShip([3,4],!1,4),i.placeShip([6,8],!0,3),i.placeShip([6,2],!1,3),i.placeShip([0,5],!0,2);const a=new e(o),l=new e(i);function r(s){const e=document.createElement("div");0==document.getElementsByClassName("board").length?e.id="1":e.id="2",e.classList.add("board"),document.querySelector("body").appendChild(e);for(let r=0;r<s.board.length;r++)for(let n=0;n<s.board[r].length;n++){const h=document.createElement("div");h.classList.add("tile"),h.id=`${r},${n},${e.id}`,s.board[r][n]instanceof t&&h.classList.add("ship"),"2"==e.id?(h.classList.add("computerTile"),h.onclick=function(){const t=l.attack([r,n]);if("alreadyHit"==t)return;this.style.backgroundColor=t?"red":"lightblue",h.style.cursor="default";const s=document.querySelectorAll(".playerTile");let e=a.randomAttack();for(;"alreadyHit"==e;)e=a.randomAttack();s.forEach((t=>{const s=t.id.split(",");[s[0],s[1]]==a.attackedCoord.toString()&&(e?(t.style.backgroundColor="red",e=!1):t.style.backgroundColor="lightblue")})),(o.allSunk()||i.allSunk())&&(console.log("Game Over"),document.querySelectorAll(".computerTile").forEach((t=>{t.onclick=null,t.classList.remove("computerTile")})))}):h.classList.add("playerTile"),e.appendChild(h)}}r(o),r(i),console.log(o.allSunk())})();