(()=>{"use strict";const t=class{constructor(t){this.length=t,this.hitCount=0,this.sunk=!1}hit(){this.hitCount++,this.isSunk()}isSunk(){return this.length==this.hitCount&&(this.sunk=!0),this.sunk}},e=class{constructor(){this.board=this.buildGrid(),this.attacks=[],this.misses=[]}buildGrid(){let t=[];for(let e=0;e<10;e++){t.push([]);for(let o=0;o<10;o++)t[e].push(null)}return t}placeShip(e,o,s){const n=new t(s);let i=!1;const a=e[0],l=e[1];if(o){if(!(a+n.length<=this.board.length))return!1;for(let t=0;t<n.length;t++)if(this.board[a+t][l])return i=!0,!1;if(!i){for(let t=0;t<n.length;t++)this.getAdjacent(a+t,l),this.board[a+t][l]=n;return!0}}else{if(!(l+n.length<=this.board.length))return!1;for(let t=0;t<n.length;t++)if(this.board[a][l+t])return i=!0,!1;if(!i){for(let t=0;t<n.length;t++)this.getAdjacent(a,l+t),this.board[a][l+t]=n;return!0}}}validPos(t,e,o,s){return t<0||e<0||t>o-1||e>s-1?0:1}getAdjacent(e,o){let s=10,n=10,i=[];return this.validPos(e,o-1,s,n)&&(i.push([e,o-1]),this.board[e][o-1]instanceof t||(this.board[e][o-1]=1)),this.validPos(e-1,o-1,s,n)&&(this.board[e-1][o-1]=1),this.validPos(e-1,o,s,n)&&(i.push([e-1,o]),this.board[e-1][o]instanceof t||(this.board[e-1][o]=1)),this.validPos(e-1,o+1,s,n)&&(this.board[e-1][o+1]=1),this.validPos(e,o+1,s,n)&&(i.push([e,o+1]),this.board[e][o+1]instanceof t||(this.board[e][o+1]=1)),this.validPos(e+1,o+1,s,n)&&(this.board[e+1][o+1]=1),this.validPos(e+1,o,s,n)&&(i.push([e+1,o]),this.board[e+1][o]instanceof t||(this.board[e+1][o]=1)),this.validPos(e+1,o-1,s,n)&&(this.board[e+1][o-1]=1),i}recieveAttack(e){for(let t=0;t<this.attacks.length;t++)if(this.attacks[t][0]==e[0]&&this.attacks[t][1]==e[1])return"alreadyHit";return this.attacks.push(e),this.board[e[0]][e[1]]instanceof t?(this.board[e[0]][e[1]].hit(),!0):(this.misses.push(e),!1)}allSunk(){for(let e=0;e<this.board.length;e++)for(let o=0;o<this.board.length;o++)if(this.board[e][o]instanceof t&&!this.board[e][o].isSunk())return!1;return!0}},o=class{constructor(t){this.enemyBoard=t,this.attackedCoord,this.possibleAttacks=this.attackList()}attackList(){let t=[];for(let e=0;e<10;e++)for(let o=0;o<10;o++)t.push([e,o]);for(let e=t.length-1;e>0;e--){const o=Math.floor(Math.random()*(e+1));[t[e],t[o]]=[t[o],t[e]]}return t}attack(t){return this.enemyBoard.recieveAttack(t)}randomAttack(){const t=[Math.floor(10*Math.random()),Math.floor(10*Math.random())];return this.attackedCoord=t,this.enemyBoard.recieveAttack(t)}smartAttack(t){let e=this.enemyBoard.getAdjacent(parseInt(t[0]),parseInt(t[1]));return console.log("coord: "+t+" adjacent attacks: "+e[0]),e}};!function(){const s=new e,n=new e;for(let t=5;t>0;t--){let e=!1;for(;!e;){const o=[Math.floor(10*Math.random()),Math.floor(10*Math.random())];let s=Math.random()<.5;e=n.placeShip(o,s,t)}}const i=new o(s),a=new o(n),l=document.createElement("div");l.classList.add("board");const r=document.querySelector("body");r.appendChild(l);let d=5;const c=document.createElement("button");c.textContent="Rotate",c.id="rotateBtn",r.appendChild(c);let h=!1;c.onclick=function(){h=!1===h,console.log(h)};const u=document.querySelector("#instruction");u.textContent="Place your ships";for(let e=0;e<10;e++)for(let o=0;o<10;o++){const i=document.createElement("div");i.classList.add("tile"),i.id=`${e},${o}`,i.onclick=function(){const e=this.id.split(",");if(s.placeShip([parseInt(e[0]),parseInt(e[1])],h,d)){d-=1;for(let e=0;e<10;e++)for(let o=0;o<10;o++)if(s.board[e][o]instanceof t){const t=document.getElementById(`${e},${o}`);t.classList.add("playerShip"),t.classList.add("ship")}}0==d&&(document.querySelectorAll(".tile").forEach((t=>{t.onclick=null,t.onmouseenter=null,t.onmouseleave=null})),r.removeChild(l),r.removeChild(c),f(s),f(n),u.textContent="Shoot an enemy tile.")},i.onmouseenter=function(){const t=document.querySelectorAll(".tile");for(let e=0;e<t.length;e++)if(h){if(t[e].id==this.id&&parseInt(this.id[0])+d<=10)for(let o=e;o<10*d+e;o+=10)t[o].classList.add("placementTile")}else if(t[e].id==this.id&&parseInt(this.id[2])+d<=10)for(let o=e;o<d+e;o++)t[o].classList.add("placementTile")},i.onmouseleave=function(){document.querySelectorAll(".placementTile").forEach((t=>{t.classList.remove("placementTile")}))},l.appendChild(i)}function f(e){const o=document.createElement("div");0==document.getElementsByClassName("board").length?o.id="1":o.id="2",o.classList.add("board"),document.querySelector("body").appendChild(o);for(let l=0;l<e.board.length;l++)for(let r=0;r<e.board[l].length;r++){const d=document.createElement("div");d.classList.add("tile"),d.id=`${l},${r},${o.id}`,d.textContent=`${l},${r}`,e.board[l][r]instanceof t&&(d.classList.add("ship"),"1"==o.id&&d.classList.add("playerShip")),"2"==o.id?(d.classList.add("computerTile"),d.onclick=function(){console.log(i.possibleAttacks);const t=a.attack([l,r]);if(d.style.cursor="default","alreadyHit"!=t){if(t)this.style.backgroundColor="red",u.textContent="You hit an enemy ship, shoot again!";else{u.textContent="Shoot an enemy tile.",this.style.backgroundColor="lightblue";const t=document.querySelectorAll(".playerTile");let e=!0,o=!1;for(;e;){let s=i.randomAttack();for(o&&(s=i.smartAttack(e));"alreadyHit"==s;)s=i.randomAttack();t.forEach((t=>{const n=t.id.split(","),a=[n[0],n[1]];a==i.attackedCoord.toString()&&(s?(t.style.backgroundColor="red",e=a,o=!0):(t.style.backgroundColor="lightblue",e=!1))}))}}(s.allSunk()||n.allSunk())&&(n.allSunk()?u.textContent="Congratulations, you sank all the enemy ships!":u.textContent="All your ships have sank, we need a better strategy.",document.querySelectorAll(".computerTile").forEach((t=>{t.onclick=null,t.classList.remove("computerTile")})))}}):d.classList.add("playerTile"),o.appendChild(d)}}}()})();